{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Title/Title.module.css","components/Title/SectionTitle/SectionTitle.module.css","components/Notification/Notification.module.css","components/Container/Container.js","components/Title/Title.jsx","components/Title/SectionTitle/SectionTitle.jsx","redux/contacts-selector.js","redux/contacts-actions.js","redux/contacts-operation.js","components/ContactForm/ContactForm.js","components/Notification/Notification.js","components/ContactList/contactItem.jsx","components/Loader-spinner/Loader-spinner.jsx","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","s","container","HeroTitle","title","hero_title","defaultProps","SectionTitle","sectionTitle","section_title","getContactsItems","state","contacts","items","filterValue","filter","loadingForList","loadingForForm","loadingForDelete","getVisibleItems","data","normFilter","toLowerCase","name","includes","actions","getItemsRequest","createAction","getItemsSuccess","getItemsError","addItemRequest","addItemSuccess","addItemError","deleteItemRequest","deleteItemSuccess","deleteItemError","changeFilter","axios","defaults","baseURL","ContactForm","isLoadingAddBtn","useSelector","dispatch","useDispatch","useForm","register","handleSubmit","errors","formState","resetField","resetInputField","formWrapper","onSubmit","item","number","normalizedName","theFirstCondition","find","contact","theSecondCondition","toast","error","a","post","then","catch","form","htmlFor","label","type","errorMessage","input","id","required","maxLength","pattern","btnSubmit","Notification","message","message_notification","propType","PropTypes","string","isRequired","ContactItem","isLoadingForBtn","list_item","href","link_to_call","btnItem","onClick","delete","deleteContactsItem","loaderStyle","position","LoaderSpinner","style","color","height","width","timeout","ContactList","isLoading","useEffect","get","contactItems","sort","b","console","log","length","contacts_list","map","Filter","filter_overlay","filter_label","value","onChange","target","trim","filter_input","App","theme","autoClose","createReducer","_","payload","combineReducers","store","configureStore","reducer","rootReducer","devTools","process","middleware","getDefaultMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a1388d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"ContactForm_formWrapper__3TLmm\",\"form\":\"ContactForm_form__3mChn\",\"input\":\"ContactForm_input__2w9hC\",\"label\":\"ContactForm_label__1c649\",\"btnSubmit\":\"ContactForm_btnSubmit__2yoIt\",\"errorMessage\":\"ContactForm_errorMessage__3L5xw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_list\":\"ContactList_contacts_list__OCStE\",\"list_item\":\"ContactList_list_item__3giG7\",\"link_to_call\":\"ContactList_link_to_call__1oO-Y\",\"btnItem\":\"ContactList_btnItem__1b8O8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_overlay\":\"Filter_filter_overlay__1FYX0\",\"filter_label\":\"Filter_filter_label__2YlhV\",\"filter_input\":\"Filter_filter_input__3AYuJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3WcwV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hero_title\":\"Title_hero_title__Q28PL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section_title\":\"SectionTitle_section_title__1KzyU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_notification\":\"Notification_message_notification__CdDob\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Title.module.css\";\r\n\r\nexport default function HeroTitle({ title }) {\r\n  return <h1 className={s.hero_title}>{title}</h1>;\r\n}\r\n\r\nHeroTitle.defaultProps = {\r\n  title: \"Phonebook\",\r\n};\r\n\r\nHeroTitle.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./SectionTitle.module.css\";\r\n\r\nexport default function SectionTitle({ sectionTitle }) {\r\n  return <h2 className={s.section_title}>{sectionTitle}</h2>;\r\n}\r\n\r\nSectionTitle.defaultProps = {\r\n  title: \"Contacts\",\r\n};\r\n\r\nSectionTitle.propTypes = {\r\n  sectionTitle: PropTypes.string,\r\n};\r\n","export const getContactsItems = (state) => state.contacts.items;\r\nexport const filterValue = (state) => state.contacts.filter;\r\nexport const loadingForList = (state) => state.contacts.loadingForList;\r\nexport const loadingForForm = (state) => state.contacts.loadingForForm;\r\nexport const loadingForDelete = (state) => state.contacts.loadingForDelete;\r\n\r\n//for ContactList\r\nexport const getVisibleItems = (state) => {\r\n  const data = getContactsItems(state);\r\n  const filter = filterValue(state);\r\n  if (filter) {\r\n    let normFilter = filter.toLowerCase();\r\n    return data.filter(({ name }) => name.toLowerCase().includes(normFilter));\r\n  } else {\r\n    return data;\r\n  }\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst getItemsRequest = createAction(\"contacts/getItemsRequest\");\r\nconst getItemsSuccess = createAction(\"contacts/getItemsSuccess\");\r\nconst getItemsError = createAction(\"contacts/getItemsError\");\r\n\r\nconst addItemRequest = createAction(\"contacts/addItemRequest\");\r\nconst addItemSuccess = createAction(\"contacts/addItemSuccess\");\r\nconst addItemError = createAction(\"contacts/addItemError\");\r\n\r\nconst deleteItemRequest = createAction(\"contacts/deleteItemRequest\");\r\nconst deleteItemSuccess = createAction(\"contacts/deleteItemSuccess\");\r\nconst deleteItemError = createAction(\"contacts/deleteItemError\");\r\n\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nconst actions = {\r\n  getItemsRequest,\r\n  getItemsSuccess,\r\n  getItemsError,\r\n  addItemRequest,\r\n  addItemSuccess,\r\n  addItemError,\r\n  deleteItemRequest,\r\n  deleteItemSuccess,\r\n  deleteItemError,\r\n  changeFilter,\r\n};\r\n\r\nexport default actions;\r\n","import axios from \"axios\";\r\nimport actions from \"./contacts-actions\";\r\n\r\nconst {\r\n  getItemsRequest,\r\n  getItemsSuccess,\r\n  getItemsError,\r\n  addItemRequest,\r\n  addItemSuccess,\r\n  addItemError,\r\n  deleteItemRequest,\r\n  deleteItemSuccess,\r\n  deleteItemError,\r\n} = actions;\r\n\r\naxios.defaults.baseURL = \"https://6195170f74c1bd00176c6b65.mockapi.io/api/v1\";\r\n\r\nexport const fetchContactsItem = () => async (dispatch) => {\r\n  dispatch(getItemsRequest());\r\n  try {\r\n    const { data } = await axios.get(\"/items\");\r\n    dispatch(getItemsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(getItemsError(error));\r\n  }\r\n};\r\n\r\nexport const addContactItem = (item) => async (dispatch) => {\r\n  dispatch(addItemRequest());\r\n\r\n  await axios\r\n    .post(\"/items\", item)\r\n    .then(({ data }) => dispatch(addItemSuccess(data)))\r\n    .catch((error) => dispatch(addItemError(error)));\r\n};\r\n\r\nexport const deleteContactsItem = (id) => (dispatch) => {\r\n  dispatch(deleteItemRequest());\r\n\r\n  axios\r\n    .delete(`/items/${id}`)\r\n    .then(() => dispatch(deleteItemSuccess(id)))\r\n    .catch((error) => dispatch(deleteItemError(error)));\r\n};\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getContactsItems,\r\n  loadingForForm,\r\n} from \"../../redux/contacts-selector\";\r\nimport { addContactItem } from \"../../redux/contacts-operation\";\r\n\r\nfunction ContactForm() {\r\n  const isLoadingAddBtn = useSelector(loadingForForm);\r\n  const contacts = useSelector(getContactsItems);\r\n  const dispatch = useDispatch();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    resetField,\r\n  } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    const { name, number } = data;\r\n    const normalizedName = name.toLowerCase();\r\n    const theFirstCondition = contacts.find(\r\n      (contact) => contact.name.toLowerCase() === normalizedName\r\n    );\r\n    const theSecondCondition = contacts.find(\r\n      (contact) => contact.number === number\r\n    );\r\n\r\n    if (theFirstCondition) {\r\n      return toast.error(`${name} is already in contacts list`);\r\n    } else if (theSecondCondition) {\r\n      return toast.error(`${number} is already in contacts list`);\r\n    } else {\r\n      dispatch(addContactItem(data));\r\n    }\r\n    resetInputField();\r\n  };\r\n\r\n  const resetInputField = () => {\r\n    resetField(\"name\");\r\n    resetField(\"number\");\r\n  };\r\n\r\n  return (\r\n    <div className={s.formWrapper}>\r\n      <form onSubmit={handleSubmit(onSubmit)} className={s.form}>\r\n        <label htmlFor=\"nameInput\" className={s.label}>\r\n          Name:\r\n          {errors.name?.type === \"required\" && (\r\n            <span className={s.errorMessage}> is required*</span>\r\n          )}\r\n          <input\r\n            type=\"text\"\r\n            className={s.input}\r\n            id=\"nameInput\"\r\n            {...register(\"name\", {\r\n              required: true,\r\n              maxLength: 80,\r\n              pattern:\r\n                \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\r\n              title:\r\n                \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\r\n            })}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor=\"telInput\" className={s.label}>\r\n          Number:\r\n          {errors.number?.type === \"required\" && (\r\n            <span className={s.errorMessage}> is required *</span>\r\n          )}\r\n          <input\r\n            type=\"tel\"\r\n            className={s.input}\r\n            id=\"telInput\"\r\n            {...register(\"number\", {\r\n              required: true,\r\n              maxLength: 12,\r\n              pattern:\r\n                \"/+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}/i\",\r\n            })}\r\n          />\r\n        </label>\r\n\r\n        <br />\r\n        <button type=\"submit\" className={s.btnSubmit}>\r\n          {isLoadingAddBtn ? \"Adding...\" : \"Add contact\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Notification.module.css\";\r\n\r\nexport default function Notification({ message }) {\r\n  return <p className={s.message_notification}>{message}</p>;\r\n}\r\n\r\nNotification.defaultProps = {\r\n  message: \"No contacts \",\r\n};\r\n\r\nNotification.propType = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\nimport { MdCall, MdOutlineDeleteOutline } from \"react-icons/md\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteContactsItem } from \"../../redux/contacts-operation\";\r\n// import { loadingForDelete } from \"../../redux/contacts-selector\";\r\nexport default function ContactItem({ id, name, number, isLoadingForBtn }) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <li key={id} className={s.list_item}>\r\n      <p>{name}</p>\r\n      <a href=\"tel:{number}\" className={s.link_to_call}>\r\n        <MdCall />\r\n        {number}\r\n      </a>\r\n\r\n      <button\r\n        type=\"button\"\r\n        className={s.btnItem}\r\n        onClick={() => dispatch(deleteContactsItem(id))}\r\n      >\r\n        {isLoadingForBtn ? \"...\" : <MdOutlineDeleteOutline />}\r\n        {/* <MdOutlineDeleteOutline /> */}\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactItem.propType = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst loaderStyle = {\r\n  position: \"absolute\",\r\n};\r\n\r\nexport default function LoaderSpinner() {\r\n  return (\r\n    <div style={loaderStyle}>\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"#00BFFF\"\r\n        height={30}\r\n        width={30}\r\n        timeout={3000} //3 secs\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport s from \"./ContactList.module.css\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport ContactItem from \"./contactItem\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getVisibleItems,\r\n  loadingForList,\r\n  loadingForDelete,\r\n} from \"../../redux/contacts-selector\";\r\nimport { fetchContactsItem } from \"../../redux/contacts-operation\";\r\nimport LoaderSpinner from \"../Loader-spinner/Loader-spinner\";\r\n\r\nexport default function ContactList() {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(loadingForList);\r\n  const isLoadingForBtn = useSelector(loadingForDelete);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContactsItem());\r\n  }, [dispatch]);\r\n\r\n  const contactItems = [...useSelector(getVisibleItems)].sort((a, b) => {\r\n    const aa = a.name.toLowerCase();\r\n    const bb = b.name.toLowerCase();\r\n    return aa > bb ? 1 : -1;\r\n  });\r\n\r\n  console.log(\"contactItems\", contactItems);\r\n  return (\r\n    <>\r\n      {isLoading && <LoaderSpinner />}\r\n      {/* {isError && <p>...:(...</p>}  */}\r\n      {contactItems && contactItems.length === 0 && <Notification />}\r\n\r\n      {contactItems ? (\r\n        <ul className={s.contacts_list}>\r\n          {contactItems.map(({ id, name, number }) => (\r\n            <ContactItem\r\n              key={id}\r\n              id={id}\r\n              name={name}\r\n              number={number}\r\n              isLoadingForBtn={isLoadingForBtn}\r\n            />\r\n          ))}\r\n        </ul>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\nimport actions from \"../../redux/contacts-actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { filterValue } from \"../../redux/contacts-selector\";\r\nconst { changeFilter } = actions;\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(filterValue);\r\n\r\n  return (\r\n    <div className={s.filter_overlay}>\r\n      <label className={s.filter_label}>\r\n        Find contacts by name:\r\n        <input\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={({ target }) => dispatch(changeFilter(target.value.trim()))}\r\n          className={s.filter_input}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Filter.propTypes = {\r\n//   filter: PropTypes.string,\r\n//   changeFilter: PropTypes.func,\r\n// };\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     filter: state.filter,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     onChangeFilter: (e) => dispatch(changeFilter(e.target.value.trim())),\r\n//   };\r\n// };\r\n","import \"./App.css\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n// import { connect } from \"react-redux\";\r\n\r\nimport Container from \"./components/Container/Container\";\r\nimport HeroTitle from \"./components/Title/Title\";\r\nimport SectionTitle from \"./components/Title/SectionTitle/SectionTitle\";\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport Filter from \"./components/Filter/Filter\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <HeroTitle title=\"Phonebook\" />\r\n        <ContactForm />\r\n        <>\r\n          <SectionTitle sectionTitle=\"Contacts\" />\r\n          <Filter />\r\n          <ContactList />\r\n        </>\r\n      </Container>\r\n      <ToastContainer theme=\"dark\" autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// import actionTypes from \"./actions-type\";\r\nimport actions from \"./contacts-actions\";\r\nimport { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nconst {\r\n  getItemsRequest,\r\n  getItemsSuccess,\r\n  getItemsError,\r\n  addItemRequest,\r\n  addItemSuccess,\r\n  addItemError,\r\n  deleteItemRequest,\r\n  deleteItemSuccess,\r\n  deleteItemError,\r\n  changeFilter,\r\n} = actions;\r\n\r\nexport const items = createReducer([], {\r\n  [getItemsSuccess]: (_, { payload }) => payload,\r\n\r\n  [addItemSuccess]: (state, { payload }) => [...state, payload],\r\n\r\n  [deleteItemSuccess]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loadingForList = createReducer(false, {\r\n  [getItemsRequest]: () => true,\r\n  [getItemsSuccess]: () => false,\r\n  [getItemsError]: () => false,\r\n});\r\n\r\nconst loadingForForm = createReducer(false, {\r\n  [addItemRequest]: () => true,\r\n  [addItemSuccess]: () => false,\r\n  [addItemError]: () => false,\r\n});\r\n\r\nconst loadingForDelete = createReducer(false, {\r\n  [deleteItemRequest]: () => true,\r\n  [deleteItemSuccess]: () => false,\r\n  [deleteItemError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loadingForList,\r\n  loadingForForm,\r\n  loadingForDelete,\r\n  error,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n// import { setupListeners } from \"@reduxjs/toolkit/query\";\r\nimport rootReducer from \"./contacts-reducer\";\r\n// import { itemsApi } from \"./itemsRTK\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: rootReducer,\r\n    // [itemsApi.reducerPath]: itemsApi.reducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware: (getDefaultMiddleware) => [\r\n    ...getDefaultMiddleware(),\r\n    // itemsApi.middleware,\r\n  ],\r\n});\r\n\r\n// setupListeners(store.dispatch);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\"; //, persistor\r\n// import { PersistGate } from \"redux-persist/integration/react\";\r\n// console.log(store);\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={null} persistor={persistor}> */}\r\n      <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}